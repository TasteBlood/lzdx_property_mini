<style lang="less" scoped>
    .areaSelector{
        display: flex;
        flex-direction: column;
        position: fixed;
        z-index: 100;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;

        .bg{
            position: absolute;
            left:0;
            top:0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .selector{
            width: 100%;
            height: 100%;
            position: fixed;
            left: 0;
            top: 0;
            background-color: #f1f1f1;

            .content{
                display: flex;
                flex-direction: column;
                height: 94%;
                justify-content: space-between;

                .list{
                    width: 100%;
                    height: 33%;
                    background-color: white;
                    overflow-y: scroll;

                    .list-item{
                        color:#515151;
                        background-color: white;
                        font-size: 30rpx;
                        padding: 20rpx;
                        border-bottom: 2rpx solid #f1f1f1;
                        text-align: center;
                    }

                    .list-item-3{
                        color:#515151;
                        background-color: white;
                        font-size: 30rpx;
                        padding: 20rpx;
                        border-bottom: 2rpx solid #f1f1f1;
                        text-align: center;
                    }

                    .list-item:active{
                        background-color: #f2f2f2;
                    }

                    .list-item.active{
                        color: rgb(151, 221, 248);
                    }

                    .list-item-3:active{
                        background-color: #f2f2f2;
                    }

                    .list-item-3.active{
                        color: rgb(151, 221, 248);
                    }
                }
            }
        }
    }

    .areaSelector.hide{
        display: none;
    }
</style>

<template>
    <cover-view class="areaSelector {{show?'':'hide'}}">
        <cover-view class="bg"></cover-view>
        <cover-view class="selector">
            
            <cover-view class="content">
                <cover-view style="padding:10rpx;">一级区域</cover-view>
                <cover-view class="list">
                    <cover-view wx:for="{{oneItems}}" @tap="onFirstItemClick" data-id="{{item.id}}" data-index="{{index}}" class="list-item {{index===firstIndex?'active':''}}"  wx:key="{{index}}">
                        {{item.name}}
                    </cover-view>
                </cover-view>
                <cover-view style="padding:10rpx;">二级区域</cover-view>
                <cover-view class="list">
                    <cover-view wx:for="{{twoItems}}" @tap="onSecondItemClick" data-id="{{item.id}}" data-index="{{index}}" class="list-item {{index===secondIndex?'active':''}}"  wx:key="{{index}}">
                        {{item.name}}
                    </cover-view>
                </cover-view>
                <cover-view style="padding:10rpx;">三级区域</cover-view>
                <cover-view class="list">
                    <cover-view wx:for="{{threeItems}}" @tap="onThirdItemClick" data-id="{{item.id}}" data-index="{{index}}" class="list-item-3 {{index===thirdIndex?'active':''}}"  wx:key="{{index}}">
                        <cover-view>{{item.title}}</cover-view>
                    </cover-view>
                </cover-view>
            </cover-view>
            <cover-view style="border-top:2rpx solid #f1f1f1;display:flex;background-color:white;padding:20rpx;flex-direction:row;justify-content:space-between;font-size:32rpx;">
                <cover-view style="color:#717171" @tap="onCancel">取消</cover-view>
                <cover-view style="color:#2FBDF5" @tap="onOk">确定</cover-view>
            </cover-view>
        </cover-view>
    </cover-view>
</template>
<script>
import wepy from 'wepy'
import {getFirstArea,getSecondArea,getThirdArea} from '../utils/api'
export default class AreaSelector extends wepy.component{
    props = {
        show:{
            type:Boolean,
            default:false
        }
    };
    data = {
        firstIndex:null,
        secondIndex:null,
        thirdIndex:null,
        oneItems :[],
        twoItems :[],
        threeItems :[],

        // business variable
        ontItem:null,
        twoItem:null,
        threeItem:null
    };
    methods = {
        onCancel(){
            this.$emit('on-close')
        },
        onOk(){
            this.$emit('onAreaChoose',this.ontItem,this.twoItem,this.threeItem)
            this.$emit('on-close')
        },
        async onFirstItemClick(e){
            let id = e.currentTarget.dataset.id
            let index = e.currentTarget.dataset.index
            if(this.firstIndex === index)
                return;
            this.twoItems = []
            this.twoItem = null
            this.threeItems = []
            this.threeItem = null
            this.secondIndex = null
            this.thirdIndex = null
            this.$apply()
            this.firstIndex = index
            this.ontItem = this.oneItems[index]
            let res = await getSecondArea(id)
            this.twoItems = res.info

            this.$apply()
        },
        async onSecondItemClick(e){
            let id = e.currentTarget.dataset.id
            let index = e.currentTarget.dataset.index
            if(this.secondIndex === index)
                return;
            this.threeItems = []
            this.threeItem = null
            this.thirdIndex = null
            this.$apply()
            this.secondIndex = index
            this.twoItem = this.twoItems[index]
            let res = await getThirdArea(id)
            this.threeItems = res.info

            this.$apply()
        },
        onThirdItemClick(e){
            let id = e.currentTarget.dataset.id
            let index = e.currentTarget.dataset.index
            if(this.thirdIndex === index)
                return;
            this.thirdIndex = index
            this.threeItem = this.threeItems[index]
            this.$apply()
        }
    };
    watch = {
    };
    async onLoad(){
        let res = await getFirstArea()
        this.oneItems = res.info
        this.$apply()
    }
}
</script>
