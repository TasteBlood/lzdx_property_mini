<style lang="less" scoped>
.list {
  display: flex;
  flex-direction: column;

  .list-item {
    padding: 15rpx;
    display: flex;
    flex-direction: row;
    background-color: white;
    border-radius: 2rpx;
    box-sizing: border-box;
    box-shadow: 0px 0px 8rpx 0px rgba(209, 209, 209, 1);
    align-items: center;
    margin-top: 15rpx;

    .pic {
      width: 200rpx;
      height: 140rpx;
    }

    .pic-error {
      width: 160rpx;
      height: 100rpx;
    }

    .pic.border {
      border: 4rpx solid #ffde30;
    }

    .content {
      width: 80%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      padding: 10rpx;
      box-sizing: border-box;

      .title {
        color: #414141;
        font-size: 30rpx;
      }

      .no {
        color: #717171;
        font-size: 28rpx;
      }

      .desc {
        color: #515151;
        font-size: 28rpx;
      }

      .people {
        font-size: 26rpx;
        margin-top: 2rpx;
        color: #717171;
      }
    }
  }

  .list-item:active {
    background-color: transparent;
  }

  .list-item:first-child {
    margin-top: 0;
  }
}
</style>
<template>
    <view>
        <!-- <scroll-view scroll-y scroll-with-animation @scroll="onScroll" style="height:{{height}}px"> -->
        <view class="list" wx:if="{{items.length>0}}">
                <view class="list-item" wx:for="{{items}}" wx:key="{{index}}" @tap="onDetailClick" data-item="{{item}}">
                            <image wx:if="{{item.images.length>0}}" src="{{item.images[0]}}" class="pic" lazy-load mode="aspectFill"/>
                            <image wx:else src="../../../../../images/img_error.png" class="pic-error" lazy-load mode="widthFix"/>
                            <view class="content">
                              <text class="title single-line">{{item.title}}</text>
                              <text class="no single-line">{{item.num}}</text>
                              <text class="desc single-line">{{item.content}}</text>
                              <view class="people">
                                <text>巡检员:</text>
                                <text>{{item.adminName}}</text>
                              </view>
                            </view>
                            <image class="icon-48" src="../../../../../images/next.png"></image>
                </view>
        </view>
        <view wx:else style="text-align: center;padding: 40rpx;display: flex;flex-direction: column;align-items:center;justify-content: center;">
            <image src="../../../../../images/no_data.png" style="width:200rpx;height:180rpx;" mode="widthFix"></image>
            <text style="font-size:28rpx;color:#a1a1a1;margin-top:20rpx;">暂无数据</text>
        </view>
    <!-- </scroll-view> -->
    </view>
</template>
<script>
import wepy from 'wepy';
import { getInsReport } from '../../utils/api';
export default class XJYJilu extends wepy.page {
  config = {
    navigationBarTitleText: '巡检记录',
    navigationBarBackgroundColor: '#FFDE30',
    navigationBarTextStyle: 'black',
    disableScroll: false,
    enablePullDownRefresh: true,
    usingComponents: {},
    onReachBottomDistance:100
  };

  data = {
    height: 0,
    items: [],
    load: false,
    noMore: false,
    page: 1,
    size: 20
  };

  components = {};

  methods = {
    onScroll(e) {},
    onDetailClick(e) {
      wx.navigateTo({
        url: `xjy_detail?insReportId=${e.currentTarget.dataset.item.id}`
      });
    }
  };
  computed = {};

  async onLoad() {
    let self = this;
    wx.getSystemInfo({
      success: function(res) {
        // console.log(res);
        self.height = res.windowHeight;
        self.$apply();
      }
    });
    this.loadData(this.page, this.size);
  }

  async loadData(pageNum, pageSize) {
    if (this.load) return;
    this.load = true;
    let res = await getInsReport('', '', pageNum, pageSize, true);
    wx.stopPullDownRefresh();
    this.load = false;
    if (res.status === 1) {
      res.info.records.forEach(e => {
        e.images = e.fileUrl.split(';');
      });
      if (pageNum === 1) {
        this.items.splice(0, this.items.length);
        this.items = res.info.records;
      } else {
        this.items.concat(res.info.records);
      }
      if (res.info.pageindex.endindex === pageNum) {
        this.noMore = true;
      } else {
        this.page++;
      }
      this.$apply();
    }
  }

  onPullDownRefresh() {
    this.page = 1;
    this.loadData(this.page, this.size);
  }

  onReachBottom(){
    console.log('on bottom......')
    if(this.noMore)
      return;
    this.loadData(this.page,this.size)
  }
}
</script>
